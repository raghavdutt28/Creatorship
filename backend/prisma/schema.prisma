// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String       @id @default(uuid())
  name              String
  accessToken       String
  mediaItems        MediaItem[]
  sentProposals     Proposal[]   @relation("SentProposals")
  receivedProposals Proposal[]   @relation("ReceivedProposals")
  isBusiness        Boolean
}

model Proposal {
  id                String       @id
  proposalMessage   String
  equityPercentage  Float
  isAccepted        Boolean      @default(false)
  senderId          String
  receiverId        String
  sender            User         @relation("SentProposals", fields: [senderId], references: [id])
  receiver          User         @relation("ReceivedProposals", fields: [receiverId], references: [id])
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  @@index([senderId])
  @@index([receiverId])
}
model MediaItem {
  id             String       @id @default(uuid())
  caption        String?
  mediaType      String
  mediaUrl       String
  thumbnailUrl   String?
  permalink      String
  timestamp      DateTime
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  insights       Insight[]    
}

model Insight {
  id             String       @id @default(uuid())
  metric         String
  value          Int
  mediaItemId    String
  mediaItem      MediaItem    @relation(fields: [mediaItemId], references: [id])
}